#Data types and Queries
scalar Time

type PlayerNFL {
  id: ID!
  overallRank: Int!
  playerName: String!
  position: String!
  positionRank: String!
  teamNFL: String!  
}

type Query {
  users: [User]
  leagues: [League]
  league(leagueId: ID): League
  teams(leagueId: ID): [Team!]
  teamContracts(leagueId: ID, teamId: ID): [Contract!]
  players(numOfResults: Int): [PlayerNFL!]
  player(playerId: ID): PlayerNFL!
  userPreferences(userId: ID): UserPreferences
}

#Mutations and Inputs
input NewUser {
  ownerName: String!
  email: String!
  avatar: String!
}

type Mutation {
  createUser(input: NewUser!): User!
  createTeam(leagueId: ID, input: NewTeam!): Team!
  createContract(leagueId: ID, input: ContractInput): Contract!
}